name: strmcp

x-service: &default_service
  deploy:
    restart_policy:
      condition: any
  environment: &default_service_environment
    TZ: ${TZ}

x-internal-network: &internal_network
  driver_opts:
    com.docker.network.bridge.enable_ip_masquerade: "false"

x-proxy-ingress-network: &proxy_ingress_network proxy_ingress

services:

  capture:
    <<: *default_service
    image: strmcp/capture:${CAPTURE}
    build: ./images/capture
    container_name: capture
    shm_size: 1G
    depends_on:
      proxy:
        condition: service_started
    networks:
      - capture
    #    ports:
    #      - "4444:4444"
    environment:
      <<: *default_service_environment
      SC_CAPTURE_CONTROL_HOST: capture
      SC_CAPTURE_TIMING_URL: proxy:8080/time
      SC_CAPTURE_SCREEN_WIDTH: ${SCREEN_WIDTH}
      SC_CAPTURE_SCREEN_HEIGHT: ${SCREEN_HEIGHT}
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - data:/captures:z

  control:
    <<: *default_service
    image: strmcp/control:${CONTROL}
    build: ./images/control
    container_name: control
    depends_on:
      capture:
        condition: service_healthy
        restart: true
    networks:
      - capture
    environment:
      <<: *default_service_environment
      SC_CONTROL_DRIVER_HOST: capture
      SC_CONTROL_USERNAME_FILE: /run/secrets/control_username
      SC_CONTROL_PASSWORD_FILE: /run/secrets/control_password
      SC_CAPTURE_SCREEN_WIDTH: ${SCREEN_WIDTH}
      SC_CAPTURE_SCREEN_HEIGHT: ${SCREEN_HEIGHT}
    secrets:
      - control_username
      - control_password

  proxy:
    <<: *default_service
    image: strmcp/proxy:${PROXY}
    build: ./images/proxy
    container_name: proxy
    networks:
      - capture
      #      - ingress
    ports:
      - "8080:8080"
    environment:
      <<: *default_service_environment
    volumes:
      - data:/captures:z,ro
    labels:
      traefik.enable: "true"
      traefik.docker.network: *proxy_ingress_network
      traefik.http.routers.strmcpProxy.rule: "Host(`stream.${DOMAIN}`)"
      traefik.http.routers.strmcpProxy.entryPoints: "https"
      traefik.http.routers.strmcpProxy.middlewares: "securedAuth"
      traefik.http.services.strmcpProxy.loadBalancer.server.port: "8080"

networks:
  capture:
    <<: *internal_network
#  ingress:
#    external: true
#    name: *proxy_ingress_network

volumes:
  data:

secrets:
  control_username:
    file: ./secrets/control_username
  control_password:
    file: ./secrets/control_password
